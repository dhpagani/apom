server.port=8080
server.servlet.context-path=/apom

spring.datasource.url=jdbc:postgresql://10.19.11.22/apom
spring.datasource.username=postgres
spring.datasource.password=xxxx
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
#
spring.security.oauth2.client.registration.mvsso.client-id=sigss
spring.security.oauth2.client.registration.mvsso.client-secret=myTZWp4GaXv3Tm95JzjSw6HFVmxStBd7m5KG6rkMPuMBFPnvZ2
spring.security.oauth2.client.registration.mvsso.client-name=MVSSO
#spring.security.oauth2.client.registration.mvsso.provider=mvsso
#  
spring.security.oauth2.client.registration.mvsso.scope=id
spring.security.oauth2.client.registration.mvsso.redirect-uri-template={baseUrl}/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.mvsso.client-authentication-method=basic
spring.security.oauth2.client.registration.mvsso.authorization-grant-type=authorization_code
#
spring.security.oauth2.client.provider.mvsso.authorization-uri=http://10.19.10.2:8081/mvsso/oauth2.0/authorize
spring.security.oauth2.client.provider.mvsso.token-uri=http://10.19.10.2:8081/mvsso/oauth2.0/accessToken
spring.security.oauth2.client.provider.mvsso.user-info-uri=http://10.19.10.2:8081/mvsso/oauth2.0/profile
#spring.security.oauth2.client.provider.mvsso.jwk-set-uri=http://my-auth-server/token_keys
#spring.security.oauth2.client.provider.mvsso.user-name-attribute=id
#

